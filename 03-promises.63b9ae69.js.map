{"mappings":"ACAA,MAAM,EAAO,SAAS,aAAa,CAAC,SAC9B,EAAa,EAAK,aAAa,CAAC,uBAChC,EAAY,EAAK,aAAa,CAAC,sBAC/B,EAAc,EAAK,aAAa,CAAC,wBAevC,EAAK,gBAAgB,CAAC,SAAU,AAAA,IAC9B,EAAM,cAAc,GACpB,IAAM,EAAQ,OAAO,EAAW,KAAK,EAC/B,EAAO,OAAO,EAAU,KAAK,EAC7B,EAAS,OAAO,EAAY,KAAK,EAEvC,IAAK,IAAI,EAAI,EAAG,GAAK,EAAQ,IAC3B,AApBJ,CAAA,SAAuB,CAAQ,CAAE,CAAK,EACpC,OAAO,IAAI,QAAQ,CAAC,EAAS,KAC3B,IAAM,EAAgB,KAAK,MAAM,GAAK,GACtC,WAAW,KACL,EACF,EAAQ,CAAE,SAAA,EAAU,MAAA,CAAM,GAE1B,EAAO,CAAE,SAAA,EAAU,MAAA,CAAM,EAE7B,EAAG,EACL,EACF,CAAA,EASkB,EAAG,EAAQ,EAAQ,CAAA,EAAI,CAAA,GAClC,IAAI,CAAC,CAAC,CAAA,SAAE,CAAQ,CAAA,MAAE,CAAK,CAAE,IACxB,SAAS,MAAM,CAAC,OAAO,CAAC,CAAC,kBAAkB,EAAE,EAAS,IAAI,EAAE,EAAM,EAAE,CAAC,CAAE,CACrE,SAAU,WACZ,EACF,GACC,KAAK,CAAC,CAAC,CAAA,SAAE,CAAQ,CAAA,MAAE,CAAK,CAAE,IACzB,SAAS,MAAM,CAAC,OAAO,CAAC,CAAC,iBAAiB,EAAE,EAAS,IAAI,EAAE,EAAM,EAAE,CAAC,CAAE,CACpE,SAAU,WACZ,EACF,EAEN","sources":["<anon>","src/js/03-promises.js"],"sourcesContent":["var $47d4ff9957288465$exports = {};\nconst $47d4ff9957288465$var$form = document.querySelector(\".form\");\nconst $47d4ff9957288465$var$delayInput = $47d4ff9957288465$var$form.querySelector('input[name=\"delay\"]');\nconst $47d4ff9957288465$var$stepInput = $47d4ff9957288465$var$form.querySelector('input[name=\"step\"]');\nconst $47d4ff9957288465$var$amountInput = $47d4ff9957288465$var$form.querySelector('input[name=\"amount\"]');\nfunction $47d4ff9957288465$var$createPromise(position, delay) {\n    return new Promise((resolve, reject)=>{\n        const shouldResolve = Math.random() > 0.3;\n        setTimeout(()=>{\n            if (shouldResolve) resolve({\n                position: position,\n                delay: delay\n            });\n            else reject({\n                position: position,\n                delay: delay\n            });\n        }, delay);\n    });\n}\n$47d4ff9957288465$var$form.addEventListener(\"submit\", (event)=>{\n    event.preventDefault();\n    const delay = Number($47d4ff9957288465$var$delayInput.value);\n    const step = Number($47d4ff9957288465$var$stepInput.value);\n    const amount = Number($47d4ff9957288465$var$amountInput.value);\n    for(let i = 1; i <= amount; i++)$47d4ff9957288465$var$createPromise(i, delay + step * (i - 1)).then(({ position: position, delay: delay })=>{\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`, {\n            position: \"right-top\"\n        });\n    }).catch(({ position: position, delay: delay })=>{\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`, {\n            position: \"right-top\"\n        });\n    });\n});\n\n\n//# sourceMappingURL=03-promises.63b9ae69.js.map\n","const form = document.querySelector('.form');\nconst delayInput = form.querySelector('input[name=\"delay\"]');\nconst stepInput = form.querySelector('input[name=\"step\"]');\nconst amountInput = form.querySelector('input[name=\"amount\"]');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n  const delay = Number(delayInput.value);\n  const step = Number(stepInput.value);\n  const amount = Number(amountInput.value);\n\n  for (let i = 1; i <= amount; i++) {\n    createPromise(i, delay + step * (i - 1))\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`, {\n          position: 'right-top',\n        });\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`, {\n          position: 'right-top',\n        });\n      });\n  }\n});\n"],"names":["$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$delayInput","$47d4ff9957288465$var$stepInput","$47d4ff9957288465$var$amountInput","addEventListener","event","preventDefault","delay","Number","value","step","amount","i","$47d4ff9957288465$var$createPromise","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","then","Notiflix","Notify","success","catch","failure"],"version":3,"file":"03-promises.63b9ae69.js.map"}