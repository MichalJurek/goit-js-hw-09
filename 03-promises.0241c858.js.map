{"mappings":"ACAA,SAAS,aAAa,CAAC,SAAS,gBAAgB,CAAC,SAAU,SAAU,CAAK,EACxE,EAAM,cAAc,GAEpB,IAAM,EAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CACzC,EAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAChC,EAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAEtC,EAAe,EAEnB,IAAK,IAAI,EAAI,EAAG,GAAK,EAAQ,IAC3B,AAYJ,CAAA,SAAuB,CAAQ,CAAE,CAAK,EACpC,OAAO,IAAI,QAAQ,CAAC,EAAS,KAC3B,IAAM,EAAgB,KAAK,MAAM,GAAK,GAEhC,EAAU,WAAW,KACzB,aAAa,GAET,EACF,EAAQ,CAAE,SAAA,EAAU,MAAA,CAAM,GAE1B,EAAO,CAAE,SAAA,EAAU,MAAA,CAAM,EAE7B,EAAG,EACL,EACF,CAAA,EA1BkB,EAAG,GACd,IAAI,CAAC,CAAC,CAAA,SAAE,CAAQ,CAAA,MAAE,CAAK,CAAE,IACxB,QAAQ,GAAG,CAAC,CAAC,kBAAkB,EAAE,EAAS,IAAI,EAAE,EAAM,EAAE,CAAC,CAC3D,GACC,KAAK,CAAC,CAAC,CAAA,SAAE,CAAQ,CAAA,MAAE,CAAK,CAAE,IACzB,QAAQ,GAAG,CAAC,CAAC,iBAAiB,EAAE,EAAS,IAAI,EAAE,EAAM,EAAE,CAAC,CAC1D,GAEF,GAAgB,CAEpB","sources":["<anon>","src/js/03-promises.js"],"sourcesContent":["var $47d4ff9957288465$exports = {};\ndocument.querySelector(\".form\").addEventListener(\"submit\", function(event) {\n    event.preventDefault();\n    const initialDelay = +this.elements.delay.value;\n    const step = +this.elements.step.value;\n    const amount = +this.elements.amount.value;\n    let currentDelay = initialDelay;\n    for(let i = 1; i <= amount; i++){\n        $47d4ff9957288465$var$createPromise(i, currentDelay).then(({ position: position, delay: delay })=>{\n            console.log(`Fulfilled promise ${position} in ${delay}ms`);\n        }).catch(({ position: position, delay: delay })=>{\n            console.log(`Rejected promise ${position} in ${delay}ms`);\n        });\n        currentDelay += step;\n    }\n});\nfunction $47d4ff9957288465$var$createPromise(position, delay) {\n    return new Promise((resolve, reject)=>{\n        const shouldResolve = Math.random() > 0.3;\n        const timerId = setTimeout(()=>{\n            clearTimeout(timerId); // Clear the timeout before resolving or rejecting\n            if (shouldResolve) resolve({\n                position: position,\n                delay: delay\n            });\n            else reject({\n                position: position,\n                delay: delay\n            });\n        }, delay);\n    });\n}\n\n\n//# sourceMappingURL=03-promises.0241c858.js.map\n","document.querySelector('.form').addEventListener('submit', function (event) {\n  event.preventDefault();\n\n  const initialDelay = +this.elements.delay.value;\n  const step = +this.elements.step.value;\n  const amount = +this.elements.amount.value;\n\n  let currentDelay = initialDelay;\n\n  for (let i = 1; i <= amount; i++) {\n    createPromise(i, currentDelay)\n      .then(({ position, delay }) => {\n        console.log(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`Rejected promise ${position} in ${delay}ms`);\n      });\n\n    currentDelay += step;\n  }\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    const timerId = setTimeout(() => {\n      clearTimeout(timerId); // Clear the timeout before resolving or rejecting\n\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["document","querySelector","addEventListener","event","preventDefault","initialDelay","elements","delay","value","step","amount","currentDelay","i","$47d4ff9957288465$var$createPromise","position","Promise","resolve","reject","shouldResolve","Math","random","timerId","setTimeout","clearTimeout","then","console","log","catch"],"version":3,"file":"03-promises.0241c858.js.map"}